<?xml version="1.0" encoding="UTF-8"?>
<project name="voip" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/access-bridge-64.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.lib.classpath">
    <pathelement location="${basedir}/Server/lib/mysql-connector-java-5.1.33-bin.jar"/>
    <pathelement location="${basedir}/Server/lib/sqlite-jdbc-3.8.7.jar"/>
  </path>
  
  <path id="library.protobuf-java-2.6.0.classpath">
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module protocolTCP -->
  
  <dirname property="module.protocoltcp.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.protocoltcp" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.protocoltcp" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.protocoltcp" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.protocoltcp" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="protocoltcp.output.dir" value="${module.protocoltcp.basedir}/out/production/protocolTCP"/>
  <property name="protocoltcp.testoutput.dir" value="${module.protocoltcp.basedir}/out/test/protocolTCP"/>
  
  <path id="protocoltcp.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="protocoltcp.module.production.classpath">
    <path refid="${module.jdk.classpath.protocoltcp}"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
    <path refid="library.protobuf-java-2.6.0.classpath"/>
  </path>
  
  <path id="protocoltcp.runtime.production.module.classpath">
    <pathelement location="${protocoltcp.output.dir}"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
    <path refid="library.protobuf-java-2.6.0.classpath"/>
  </path>
  
  <path id="protocoltcp.module.classpath">
    <path refid="${module.jdk.classpath.protocoltcp}"/>
    <pathelement location="${protocoltcp.output.dir}"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
    <path refid="library.protobuf-java-2.6.0.classpath"/>
  </path>
  
  <path id="protocoltcp.runtime.module.classpath">
    <pathelement location="${protocoltcp.testoutput.dir}"/>
    <pathelement location="${protocoltcp.output.dir}"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
    <path refid="library.protobuf-java-2.6.0.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.protocoltcp">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.protocoltcp">
    <patternset refid="excluded.from.module.protocoltcp"/>
  </patternset>
  
  <path id="protocoltcp.module.sourcepath">
    <dirset dir="${module.protocoltcp.basedir}/protocolTCP">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.protocoltcp" depends="compile.module.protocoltcp.production,compile.module.protocoltcp.tests" description="Compile module protocolTCP"/>
  
  <target name="compile.module.protocoltcp.production" description="Compile module protocolTCP; production classes">
    <mkdir dir="${protocoltcp.output.dir}"/>
    <javac destdir="${protocoltcp.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.protocoltcp}/javac">
      <compilerarg line="${compiler.args.protocoltcp}"/>
      <bootclasspath refid="protocoltcp.module.bootclasspath"/>
      <classpath refid="protocoltcp.module.production.classpath"/>
      <src refid="protocoltcp.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.protocoltcp"/>
    </javac>
    
    <copy todir="${protocoltcp.output.dir}">
      <fileset dir="${module.protocoltcp.basedir}/protocolTCP/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.protocoltcp.tests" depends="compile.module.protocoltcp.production" description="compile module protocolTCP; test classes" unless="skip.tests"/>
  
  <target name="clean.module.protocoltcp" description="cleanup module">
    <delete dir="${protocoltcp.output.dir}"/>
    <delete dir="${protocoltcp.testoutput.dir}"/>
  </target>
  
  
  <!-- Module Client -->
  
  <dirname property="module.client.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.client" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.client" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.client" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.client" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="client.output.dir" value="${module.client.basedir}/out/production/Client"/>
  <property name="client.testoutput.dir" value="${module.client.basedir}/out/test/Client"/>
  
  <path id="client.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="client.module.production.classpath">
    <path refid="${module.jdk.classpath.client}"/>
    <pathelement location="${protocoltcp.output.dir}"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
  </path>
  
  <path id="client.runtime.production.module.classpath">
    <pathelement location="${client.output.dir}"/>
    <path refid="protocoltcp.runtime.production.module.classpath"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
  </path>
  
  <path id="client.module.classpath">
    <path refid="${module.jdk.classpath.client}"/>
    <pathelement location="${client.output.dir}"/>
    <pathelement location="${protocoltcp.testoutput.dir}"/>
    <pathelement location="${protocoltcp.output.dir}"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
  </path>
  
  <path id="client.runtime.module.classpath">
    <pathelement location="${client.testoutput.dir}"/>
    <pathelement location="${client.output.dir}"/>
    <path refid="protocoltcp.runtime.module.classpath"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.client">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.client">
    <patternset refid="excluded.from.module.client"/>
  </patternset>
  
  <path id="client.module.sourcepath">
    <dirset dir="${module.client.basedir}/Client">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.client" depends="compile.module.client.production,compile.module.client.tests" description="Compile module Client"/>
  
  <target name="compile.module.client.production" depends="compile.module.protocoltcp" description="Compile module Client; production classes">
    <mkdir dir="${client.output.dir}"/>
    <javac destdir="${client.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.client}/javac">
      <compilerarg line="${compiler.args.client}"/>
      <bootclasspath refid="client.module.bootclasspath"/>
      <classpath refid="client.module.production.classpath"/>
      <src refid="client.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.client"/>
    </javac>
    
    <copy todir="${client.output.dir}">
      <fileset dir="${module.client.basedir}/Client/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.client.tests" depends="compile.module.client.production" description="compile module Client; test classes" unless="skip.tests"/>
  
  <target name="clean.module.client" description="cleanup module">
    <delete dir="${client.output.dir}"/>
    <delete dir="${client.testoutput.dir}"/>
  </target>
  
  
  <!-- Module Server -->
  
  <dirname property="module.server.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.server" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.server" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.server" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.server" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="server.output.dir" value="${module.server.basedir}/out/production/Server"/>
  <property name="server.testoutput.dir" value="${module.server.basedir}/out/test/Server"/>
  
  <path id="server.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="server.module.production.classpath">
    <path refid="${module.jdk.classpath.server}"/>
    <pathelement location="${protocoltcp.output.dir}"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="server.runtime.production.module.classpath">
    <pathelement location="${server.output.dir}"/>
    <path refid="protocoltcp.runtime.production.module.classpath"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="server.module.classpath">
    <path refid="${module.jdk.classpath.server}"/>
    <pathelement location="${server.output.dir}"/>
    <pathelement location="${protocoltcp.testoutput.dir}"/>
    <pathelement location="${protocoltcp.output.dir}"/>
    <pathelement location="${basedir}/protocolTCP/lib/protobuf-java-2.6.0.jar"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="server.runtime.module.classpath">
    <pathelement location="${server.testoutput.dir}"/>
    <pathelement location="${server.output.dir}"/>
    <path refid="protocoltcp.runtime.module.classpath"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.server">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.server">
    <patternset refid="excluded.from.module.server"/>
  </patternset>
  
  <path id="server.module.sourcepath">
    <dirset dir="${module.server.basedir}/Server">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.server" depends="compile.module.server.production,compile.module.server.tests" description="Compile module Server"/>
  
  <target name="compile.module.server.production" depends="compile.module.protocoltcp" description="Compile module Server; production classes">
    <mkdir dir="${server.output.dir}"/>
    <javac destdir="${server.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.server}/javac">
      <compilerarg line="${compiler.args.server}"/>
      <bootclasspath refid="server.module.bootclasspath"/>
      <classpath refid="server.module.production.classpath"/>
      <src refid="server.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.server"/>
    </javac>
    
    <copy todir="${server.output.dir}">
      <fileset dir="${module.server.basedir}/Server/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.server.tests" depends="compile.module.server.production" description="compile module Server; test classes" unless="skip.tests"/>
  
  <target name="clean.module.server" description="cleanup module">
    <delete dir="${server.output.dir}"/>
    <delete dir="${server.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.protocoltcp, clean.module.client, clean.module.server" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.protocoltcp, compile.module.client, compile.module.server" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>